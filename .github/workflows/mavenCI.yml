# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

permissions:
  contents: write

on:
  push:
    branches:
      - 'test1'
      - 'test2'

  pull_request:
    branches: [ "main" ]

jobs:
  build:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      working-directory: ./git001

    # Run unit tests
    - name: Run Tests
      run: mvn test --file pom.xml
      working-directory: ./git001
    # configure Git
    - name: Configure Git
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      with:
        directory: ./git001

    #Merge
    - name: Merge branches
      run: |
        git checkout main
        git merge origin/test2 --no-edit || echo "No changes to merge"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        
